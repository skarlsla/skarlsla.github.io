<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://skarlsla.github.io/"/>
  <updated>2019-07-23T06:13:22.841Z</updated>
  <id>https://skarlsla.github.io/</id>
  
  <author>
    <name>NamGi YOON</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[SMS] twilio vs nexmo</title>
    <link href="https://skarlsla.github.io/2019/07/23/service-message/"/>
    <id>https://skarlsla.github.io/2019/07/23/service-message/</id>
    <published>2019-07-23T05:43:15.000Z</published>
    <updated>2019-07-23T06:13:22.841Z</updated>
    
    <content type="html"><![CDATA[<p>###Features and Services(기능 서비스)<br>Both platforms are very similar in the functions, features and services they provide users.</p><p>두 플랫폼 모두 사용자에게 제공하는 기능, 기능 및 서비스면에서 매우 유사합니다.</p><p>With Voice, SMS, and Authentication available from both Nexmo and Twilio, the key differences lie in not only the specific features included for each section, but also what functions if any the platforms include beyond these three.</p><p>Nexmo와 Twilio에서 음성, SMS 및 인증을 사용할 수있는 주요 차이점은 각 섹션에 포함 된 특정 기능뿐만 아니라이 세 가지를 넘어 플랫폼이 포함될 경우 어떤 기능이 있는지에 있습니다.</p><p>I rounded up the most relevant information provided by both Nexmo and Twilio to offer as close to a complete comparison as possible.</p><p>Nexmo와 Twilio가 제공 한 가장 관련성 높은ㅈ 정보를 가능한 한 완벽하게 비교할 수 있도록 제공했습니다.</p><h3 id="Messaging"><a href="#Messaging" class="headerlink" title="Messaging"></a>Messaging</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/messagin.jpg" alt="messaging"></p><p>※ 넥스모의 Free Inbound SMS  정책은 현재 유료로 바뀐것으로 보인다.</p><h3 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/auth.jpg" alt="auth"></p><h3 id="Pricing-가격"><a href="#Pricing-가격" class="headerlink" title="Pricing(가격)"></a>Pricing(가격)</h3><p>When it comes to the pricing of these platforms, the paradigm is different from what we have seen when comparing VoIP providers or even Team Collaboration apps. Generally, the cost of a platform is a reoccurring monthly fee based on the active users – however with Nexmo and Twilio, pricing is broken down between the phone numbers your account owns, and the incoming our out coming communications that occur. Pricing will of course differ between outbound and inbound messages, as well as between voice, SMS or authentication functions.</p><p>이러한 플랫폼의 가격 체계는  VoIP 공급자 또는 Team Collaboration 응용 프로그램을 비교할 때 보았던 것과 다릅니다. 일반적으로 플랫폼 비용은 활성 사용자를 기준으로 월별 요금이 다시 발생합니다. Nexmo 및 Twilio를 사용하면 계정에있는 전화 번호와 발생할 외부 통화에 대한 가격이 책정됩니다. 물론 발신, 수신 메시지는 물론 음성, SMS 또는 인증 기능간에 가격이 다릅니다.</p><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/pricing.jpg" alt="pricing"></p><p>Twilio Pricing : <a href="https://www.twilio.com/sms/pricing/us" target="_blank" rel="noopener">https://www.twilio.com/sms/pricing/us</a></p><p>Nexmo Pricing : <a href="https://www.nexmo.com/pricing" target="_blank" rel="noopener">https://www.nexmo.com/pricing</a></p><p>nexmo소수점은 유로 → 달러 환전에 따른 값으로 보이고 위의 보내는 메세지는 미국 기준이지만 다른 나라도 대체로 비슷한 수준이다.</p><p>###Support(지원)<br>Of course for any Cloud platform, support is as crucial as the user experience – if something ever goes wrong, you want to ensure help is there and that it will arrive within a reasonable window. With both Twilio and Nexmo, every account will start with standard, free yet limited, support. For a bit of a premium, users can upgrade their support to varying levels.</p><p>물론 클라우드 플랫폼의 경우 사용자 경험만큼 지원이 중요하다. 문제가 발생할 경우 도움이 있어야 하며 적절한 시간 내에 도움이 제공되도록 해야 한다. Twilio와 Nexmo 둘 다와 함께 모든 계정은 무료지만 제한된 지원으로 시작할 것이다. 약간의 프리미엄을 위해, 사용자들은 그들의 지원을 다양한 수준으로 업그레이드할 수 있다.</p><p>Twilio(<a href="https://www.twilio.com/support-plans" target="_blank" rel="noopener">https://www.twilio.com/support-plans</a>)</p><p>Free – Email only, no guaranteed response time<br>PRODUCTION– 4% of monthly spend (or $250 minimum), depending on Priority level - Answer in business hours(3h,6h,9h)<br>BUSINESS– 6% of monthly spend (or $1,500 minimum), depending on Priority level - Answer in business hours(1h(24/7),6h,9h), Email and phone support (24/7)<br>PERSONALIZED – 8% of monthly spend (or $5,000 minimum), depending on Priority level - Answer in business hours(1h(24/7),6h,9h), Email and phone support (24/7),Technical account manager,Support escalation line,Quarterly status review</p><p>Nexmo(<a href="https://www.nexmo.com/pricing" target="_blank" rel="noopener">https://www.nexmo.com/pricing</a>)</p><p>Standard–  Support via email and web<br>Priority Support– $1,500 a month for Support via chat, email, and web 24/7 escalation<br>Enterprise  - contact<br>The Bottom Line(결론)<br>At the end of the day, both Twilio and Nexmo should satisfy the majority of users and developers. Both providers offer comparable features, functions, products and service. Both providers include detailed and rich docs for developers, as well as a well thought out design and a solid user experience. Both providers include comprehensive support, and allow users the option to upgrade support for 24×7 coverage and personal engineers.</p><p>두 회사 모두 유사한 기능, 기능, 제품 및 서비스를 제공합니다. </p><p>두 회사 모두 개발자를위한 상세하고 풍부한 문서뿐만 아니라 잘 설계된 디자인과 확실한 사용자 경험을 제공합니다. </p><p>두 회사 모두 포괄적 인 지원을 제공하며 사용자가 24x7 커버리지 및 개인 엔지니어 지원을 업그레이드 할 수있는 옵션을 제공합니다.</p><p>비슷한 가격에 twilio가 더 나은 기능과 서비스를 제공하는 것 같다.</p><p>관리(console)의 편의성이나 개발(api)의  편리함이 보인다.</p><p>또한 email서비스인 sendgrid도 twilio의 서비스이다. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###Features and Services(기능 서비스)&lt;br&gt;Both platforms are very similar in the functions, features and services they provide users.&lt;/p&gt;
&lt;p&gt;두 
      
    
    </summary>
    
      <category term="service" scheme="https://skarlsla.github.io/categories/service/"/>
    
    
      <category term="sms" scheme="https://skarlsla.github.io/tags/sms/"/>
    
      <category term="email" scheme="https://skarlsla.github.io/tags/email/"/>
    
  </entry>
  
  <entry>
    <title>[SNS LOGIN] sns(kakao) login with javascript</title>
    <link href="https://skarlsla.github.io/2019/07/19/webserver-auth4/"/>
    <id>https://skarlsla.github.io/2019/07/19/webserver-auth4/</id>
    <published>2019-07-19T05:43:15.000Z</published>
    <updated>2019-07-19T06:46:57.190Z</updated>
    
    <content type="html"><![CDATA[<h3 id="간편로그인"><a href="#간편로그인" class="headerlink" title="간편로그인"></a>간편로그인</h3><p>카카오에서 간편로그인으로 ios,android,javascript,restapi를 제공한다.</p><p>restapi는 앱서버에서 OAuth2.0인증에 따라 인증코드로 SNS로 조회 후 로그인(세션/토큰) 처리까지 처리했다면<br>javascript SDK를 사용하면 클라이언트에서 바로 SNS로그인 결과를 받아서 처리를 할수있다.</p><hr><h3 id="javascript-로-kakao-login"><a href="#javascript-로-kakao-login" class="headerlink" title="javascript 로 kakao login"></a>javascript 로 kakao login</h3><ol><li><p><a href="https://developers.kakao.com" target="_blank" rel="noopener">https://developers.kakao.com</a> 회원가입 &amp; 로그인</p></li><li><p>앱만들기 &amp; 플랫폼 사이트 추가<br><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/app_creI.jpg" alt="사이트 추가"></p></li><li><p>사용자관리 &amp; 등록<br><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/user.jpg" alt="사용자관리"></p></li><li><p>개인정보 동의<br><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/agree.jpg" alt="사용자관리"></p></li><li><p>javascript 코드 with html</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span> /&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span> /&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width"</span> /&gt;</span><br><span class="line">    &lt;title&gt;Login Demo - Kakao JavaScript SDK&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">    &lt;script src="/</span><span class="regexp">/developers.kakao.com/</span>sdk/js/kakao.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">    &lt;a id="</span>kakao-login-btn<span class="string">"&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">    &lt;a href="</span>http:<span class="comment">//developers.kakao.com/logout"&gt;&lt;/a&gt;</span></span><br><span class="line">    &lt;script type=<span class="string">'text/javascript'</span>&gt;</span><br><span class="line">        <span class="comment">//&lt;![CDATA[</span></span><br><span class="line">        <span class="comment">// 사용할 앱의 JavaScript 키를 설정해 주세요.</span></span><br><span class="line">        Kakao.init(<span class="string">'javascript key 입력'</span>);</span><br><span class="line">        <span class="comment">// 카카오 로그인 버튼을 생성합니다.</span></span><br><span class="line">        Kakao.Auth.createLoginButton(&#123;</span><br><span class="line">            container: <span class="string">'#kakao-login-btn'</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">authObj</span>) </span>&#123;</span><br><span class="line">                alert(<span class="built_in">JSON</span>.stringify(authObj));</span><br><span class="line">            &#125;,</span><br><span class="line">            fail: <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">                alert(<span class="built_in">JSON</span>.stringify(err));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">      <span class="comment">//]]&gt;</span></span><br><span class="line">    &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>node 환경은 생략</p></li><li><p>node.js로 간편하게 실행하기(npm은 express,body-parser,cookie-parser,multer 설치)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">   res.sendfile(<span class="string">'./index.html'</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.listen(<span class="number">8000</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">   <span class="keyword">var</span> host = server.address().address</span><br><span class="line">   <span class="keyword">var</span> port = server.address().port</span><br><span class="line">   </span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">"Example app listening at http://%s:%s"</span>, host, port)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol><p>server.js</p><ol start="7"><li><p>실행 node server.js</p></li><li><p>localhost:8000 접속<br><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/kakao_agree.jpg" alt="사용자관리"></p></li><li><p>로그인창<br><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/kakao_login.png" alt="로그인"></p></li><li><p>결과내용<br><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/kakao_return.jpg" alt="결과내용"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;간편로그인&quot;&gt;&lt;a href=&quot;#간편로그인&quot; class=&quot;headerlink&quot; title=&quot;간편로그인&quot;&gt;&lt;/a&gt;간편로그인&lt;/h3&gt;&lt;p&gt;카카오에서 간편로그인으로 ios,android,javascript,restapi를 제공한다.&lt;/p&gt;
&lt;p
      
    
    </summary>
    
      <category term="webserver" scheme="https://skarlsla.github.io/categories/webserver/"/>
    
    
      <category term="sns" scheme="https://skarlsla.github.io/tags/sns/"/>
    
      <category term="간편로그인" scheme="https://skarlsla.github.io/tags/%EA%B0%84%ED%8E%B8%EB%A1%9C%EA%B7%B8%EC%9D%B8/"/>
    
  </entry>
  
  <entry>
    <title>[WEBSERVER] sns login (oauth2)</title>
    <link href="https://skarlsla.github.io/2019/07/18/webserver-auth3/"/>
    <id>https://skarlsla.github.io/2019/07/18/webserver-auth3/</id>
    <published>2019-07-18T02:43:15.000Z</published>
    <updated>2019-07-18T02:30:12.434Z</updated>
    
    <content type="html"><![CDATA[<h3 id="SNS-LOGIN"><a href="#SNS-LOGIN" class="headerlink" title="SNS LOGIN"></a>SNS LOGIN</h3><p><strong>간편로그인</strong><br>웹 또는 앱서비스에 간편로그인은 기본으로 장착되는 추세이다.</p><p>SNS 로그인을 이용하기전 기반 기술을 정리해본다.</p><h3 id="OAuth2-0"><a href="#OAuth2-0" class="headerlink" title="OAuth2.0"></a>OAuth2.0</h3><p>OAuth는 3rd party(외부서비스) 인증 과 허가를 위한 표준 프로토콜이다.<br>IT기업에서 OPEN API를 제공할때 oauth를 사용하여 서비스한다.<br>대표적으로 페이스북,구글,네이버,다음카카오 등이 있겠다.<br>공통적으로 각 회사 개발자지원센터에서 가입 후 앱 혹은 웹을 만들어서 개발키를 부여받게되고<br>개발키를 사용하여 각 회사가 정의한 API사용법에 따라 인증 후 AccessToken을 발급받아 API 들을 사용 할 수있게된다.</p><hr><p><strong>권한 흐름</strong><br><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/oauth.png" alt="oauth2.0"></p><ol><li>Resouce Owner(API제공업체) 인증코드 요청</li><li>요청성공시 인증코드(Authrization Grant) 전달</li><li>인증코드로 Authorization Server에 토큰요청(AccessToken)</li><li>유효한 인증코드일때 토큰전달</li><li>토큰으로 리소스 요청</li><li>토큰이 유효한 경우 리소스 전달</li></ol><hr><p><strong>특징</strong></p><ol><li>Oauth1.0에서는 앱에서의 사용이 어려웠다.</li><li>1.0의 복잡한 구현과 흐름을 간소화 하였다.</li><li>별도의 암호처리 없이 HTTPS를 이용한다.</li><li>HMAC를 사용하지 않는다.</li><li>AccessToken 유효시간을 지정할수있다.</li></ol><hr><h3 id="SNS-로그인"><a href="#SNS-로그인" class="headerlink" title="SNS 로그인?"></a>SNS 로그인?</h3><p>SNS로그인은  Oauth2.0의 흐름에 서버인증을 추가하면 된다.</p><p><strong>로그인 Flow</strong><br><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/snslogin.PNG" alt="sns login"></p><ol><li>사용자가 간편로그인을 요청</li><li>해당 sns 로그인 페이지 리다이렉트</li><li>등록된 url로 코드전달</li><li>전달된 권한코드 검증 </li><li>검증성공시 토큰 및 프로파일 제공</li><li>해당 정보로 회원정보 인증처리</li><li>세션 또는 토큰기반으로 인증처리</li><li>로그인 성공</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;SNS-LOGIN&quot;&gt;&lt;a href=&quot;#SNS-LOGIN&quot; class=&quot;headerlink&quot; title=&quot;SNS LOGIN&quot;&gt;&lt;/a&gt;SNS LOGIN&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;간편로그인&lt;/strong&gt;&lt;br&gt;웹 또는 앱서비스에 간편로그인
      
    
    </summary>
    
      <category term="webserver" scheme="https://skarlsla.github.io/categories/webserver/"/>
    
    
      <category term="sns" scheme="https://skarlsla.github.io/tags/sns/"/>
    
      <category term="간편로그인" scheme="https://skarlsla.github.io/tags/%EA%B0%84%ED%8E%B8%EB%A1%9C%EA%B7%B8%EC%9D%B8/"/>
    
      <category term="oauth" scheme="https://skarlsla.github.io/tags/oauth/"/>
    
  </entry>
  
  <entry>
    <title>[WEBSERVER] JWT(JSON WEB TOKEN)? </title>
    <link href="https://skarlsla.github.io/2019/07/17/webserver-auth2/"/>
    <id>https://skarlsla.github.io/2019/07/17/webserver-auth2/</id>
    <published>2019-07-17T08:43:11.000Z</published>
    <updated>2019-07-17T09:06:46.825Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="JWT-JSON-Web-Token"><a href="#JWT-JSON-Web-Token" class="headerlink" title="JWT(JSON Web Token)?"></a>JWT(JSON Web Token)?</h3><p>JSON형식으로 웹에서 사용하는 토큰? JSON 객체로서 당사자간에 안전하게 정보를 전송할 수있는 작고<br>독립적 인 방법을 정의하는 공개 표준 ( RFC 7519 )이라고 한다.  </p><p><strong>사용?</strong><br>토큰기반인증에 사용하거나 안전한 정보교환이 필요할때 유용하다고 한다.</p><p><strong>구조?</strong><br>.을 구분자로 3가지의 문자열로 되어있다. 헤더(header).내용(payload).서명(signature)</p><p><strong>헤더:</strong><br>{<br>  “typ”: “JWT”,  // 토큰타입<br>  “alg”: “HS256” // 해싱 알고리즘정보<br>}</p><p><strong>내용:</strong><br>정보의 한 ‘조각’ 을 클레임이라고 한다.클레임은 사용자에 대한 프로퍼티나 속성을 넣는다.<br>registered, public, private claims으로 구분한다.</p><p>registered claim<br>미리 정의된 claim으로써, 토큰에 대한 정보이다. </p><p>public claim<br>공개적인 claim을 명시하는데, 충돌 방지를 위해 URI 형식으로 작성한다. </p><p>private claim<br>서버와 클라이언트가 협의한 claim을 명시한다.<br>이미 정해져 있는 이름을 가진 아래의 7개에 대한 정보를 담을 수 있다. </p><p>iss : Token 발행자(Issuer)<br>sub : Token의 제목 (Subject)<br>aud : Token 의 대상자 (Audience)<br>exp : Token의 유효한 날짜 정보(Expiration time)<br>nbf : Token 의 유효 시작 날짜 정보 (Not before)<br>iat : Token의 발행된 날짜 정보(Issued At)<br>jti : Token 의 고유 식별자(JWT ID) </p><p>Claim을 JSON 행태로 정의한다.</p><p>예시:<br>{<br>  “userId”:”skarl”,<br>  “exp”: “1485270000000”,<br>  “role”:[“admin”]<br>}<br>사용시에는 BASE64 인코딩을 통해서 문자열로 변환한다.</p><p><strong>서명:</strong><br>서명은 헤더의 인코딩값과, 정보의 인코딩값을 합친후 주어진 비밀키로 해쉬를 하여 생성한다.</p><p>서명을 만드는 수도코드 구조<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line">  base64UrlEncode(header) + &quot;.&quot; +</span><br><span class="line">  base64UrlEncode(payload),</span><br><span class="line">  &quot;kkkkmysecret&quot;)</span><br></pre></td></tr></table></figure></p><p>해쉬 -&gt; base64로 인코딩 후 사용</p><p>like this<br>eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJza2FybCIsImV4cCI6IjE0ODUyNzAwMDAwMDAiLCJyb2xlIjpbImFkbWluIl19.jAafdBOQCoZkV-xMcJx0BCTH45AqYtf9mcdKog4ewjc</p><p><strong>example</strong><br><a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/</a> 공식 홈페이지에서 테스트 해볼 수 있다.</p><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/JWT.PNG" alt="공홈 테스트"></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;JWT-JSON-Web-Token&quot;&gt;&lt;a href=&quot;#JWT-JSON-Web-Token&quot; class=&quot;headerlink&quot; title=&quot;JWT(JSON Web Token)?&quot;&gt;&lt;/a&gt;JWT(JSON Web Token)?&lt;/h3&gt;
      
    
    </summary>
    
      <category term="webserver" scheme="https://skarlsla.github.io/categories/webserver/"/>
    
    
      <category term="oauth" scheme="https://skarlsla.github.io/tags/oauth/"/>
    
      <category term="jwt" scheme="https://skarlsla.github.io/tags/jwt/"/>
    
      <category term="인증" scheme="https://skarlsla.github.io/tags/%EC%9D%B8%EC%A6%9D/"/>
    
  </entry>
  
  <entry>
    <title>[WEBSERVER] session/cookie or token</title>
    <link href="https://skarlsla.github.io/2019/07/17/webserver-auth/"/>
    <id>https://skarlsla.github.io/2019/07/17/webserver-auth/</id>
    <published>2019-07-17T07:43:15.000Z</published>
    <updated>2019-07-18T01:24:48.854Z</updated>
    
    <content type="html"><![CDATA[<h3 id="인증방식"><a href="#인증방식" class="headerlink" title="인증방식"></a>인증방식</h3><p><strong>1. 서버기반</strong><br>HTTP프로토콜을 기반으로하는 통신에서 client가 요청시 한번 response후에는 특별한 처리를 하지 않는이상<br>접속을 끊는다.  만약 최초 로그인을 했다고 하더라고 그후에 요청시 client의 정보는 없다는 것이다.<br>그래서 서버에서 세션을 만들어주고 쿠키를 사용하여 문제를 해결한다.</p><p>로그인 -&gt; 서버에서 session-id 생성 전달 -&gt; client sessionId 쿠키에 저장 후 사용 </p><p><strong>장단점</strong><br>일반적인 웹서비스에서 많이 쓰이는 인증방식이다. 쿠키자체에 주요정보가 있지 않아 안전한편<br>서버에서 세션및쿠키를 관리하기때문에 사용자가 많아지면 확장이 필요하다.<br>확장을 위해 메모리DB등을 사용해야한다.</p><hr><h3 id="세션기반-흐름"><a href="#세션기반-흐름" class="headerlink" title="세션기반 흐름"></a>세션기반 흐름</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/session-seq.PNG" alt="시퀀스 다이어~"></p><hr><p><strong>2. 토큰기반</strong><br>서버에서 발행한 토큰을 이용해 인증처리를 한다.</p><p>요청시 헤더에 토큰값을 보내면 서버에서 토큰검증만 하면된다.</p><p>로그인 -&gt; 서버에서 로긴처리후 token발급 -&gt; client에서 요청시 헤더에 token</p><p><strong>장단점</strong><br>확장을 위한 메모리DB등을 사용할 필요없다.<br>쿠키로 인한 사이트간 요청위조를 방지 할수있다.<br>도메인 상관없이 토큰으로 인증<br>토큰 탈취시 보안에 취약 하지만 refresh_token과 access_token의 주기 설정으로 어느정도 방어가능</p><hr><h3 id="토큰기반-흐름"><a href="#토큰기반-흐름" class="headerlink" title="토큰기반 흐름"></a>토큰기반 흐름</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/jwt-seq.PNG" alt="시퀀스 다이어~"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;인증방식&quot;&gt;&lt;a href=&quot;#인증방식&quot; class=&quot;headerlink&quot; title=&quot;인증방식&quot;&gt;&lt;/a&gt;인증방식&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1. 서버기반&lt;/strong&gt;&lt;br&gt;HTTP프로토콜을 기반으로하는 통신에서 client가 요청시 
      
    
    </summary>
    
      <category term="webserver" scheme="https://skarlsla.github.io/categories/webserver/"/>
    
    
      <category term="oauth" scheme="https://skarlsla.github.io/tags/oauth/"/>
    
      <category term="session" scheme="https://skarlsla.github.io/tags/session/"/>
    
      <category term="jwt" scheme="https://skarlsla.github.io/tags/jwt/"/>
    
      <category term="인증" scheme="https://skarlsla.github.io/tags/%EC%9D%B8%EC%A6%9D/"/>
    
  </entry>
  
  <entry>
    <title>[JENKINS] pipeline 작성 </title>
    <link href="https://skarlsla.github.io/2019/07/11/jenkins-pipeline/"/>
    <id>https://skarlsla.github.io/2019/07/11/jenkins-pipeline/</id>
    <published>2019-07-11T10:11:03.000Z</published>
    <updated>2019-07-11T10:25:27.915Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="git-lab-설정에서-webhook-push-Event-이후-작성-정의-pipeline"><a href="#git-lab-설정에서-webhook-push-Event-이후-작성-정의-pipeline" class="headerlink" title="git lab 설정에서 webhook (push Event) 이후 작성 정의(pipeline)"></a>git lab 설정에서 webhook (push Event) 이후 작성 정의(pipeline)</h3><p>pipeline script</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">pipeline</span> <span class="string">&#123;</span></span><br><span class="line">  <span class="string">agent</span> <span class="string">any</span></span><br><span class="line">     </span><br><span class="line">  <span class="string">tools</span> <span class="string">&#123;nodejs</span> <span class="string">"node"</span><span class="string">&#125;</span></span><br><span class="line">     </span><br><span class="line">  <span class="string">stages</span> <span class="string">&#123;</span>       </span><br><span class="line">    <span class="string">stage('Cloning</span> <span class="string">Git')</span> <span class="string">&#123;</span></span><br><span class="line">      <span class="string">steps</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">git</span> <span class="attr">url:</span> <span class="string">'https://xxx.xxxxx.com/bittorage/WebServer.git'</span><span class="string">,</span></span><br><span class="line"><span class="attr">        credentialsId:</span> <span class="string">'gitlab-skarl-passwd'</span><span class="string">,</span></span><br><span class="line"><span class="attr">        branch:</span> <span class="string">'develop'</span></span><br><span class="line">      <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">         </span><br><span class="line">    <span class="string">stage('Install</span> <span class="string">dependencies')</span> <span class="string">&#123;</span></span><br><span class="line">      <span class="string">steps</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="string">sh</span> <span class="string">'npm install'</span></span><br><span class="line">      <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">     </span><br><span class="line">    <span class="string">stage('Test')</span> <span class="string">&#123;</span></span><br><span class="line">      <span class="string">steps</span> <span class="string">&#123;</span></span><br><span class="line">         <span class="string">sh</span> <span class="string">'npm test'</span></span><br><span class="line">      <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span>  </span><br><span class="line">  <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><hr><h3 id="실행"><a href="#실행" class="headerlink" title="실행"></a>실행</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/pipeline.png" alt="실행"></p><h3 id="로그"><a href="#로그" class="headerlink" title="로그"></a>로그</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">Started by GitLab push by </span><br><span class="line">Running in Durability level: MAX_SURVIVABILITY</span><br><span class="line">[Pipeline] Start of Pipeline</span><br><span class="line">[Pipeline] node</span><br><span class="line">Running on Jenkins in /var/lib/jenkins/workspace/pipe1</span><br><span class="line">[Pipeline] &#123;</span><br><span class="line">[Pipeline] stage</span><br><span class="line">[Pipeline] &#123; (Declarative: Tool Install)</span><br><span class="line">[Pipeline] tool</span><br><span class="line">[Pipeline] envVarsForTool</span><br><span class="line">[Pipeline] &#125;</span><br><span class="line">[Pipeline] // stage</span><br><span class="line">[Pipeline] withEnv</span><br><span class="line">[Pipeline] &#123;</span><br><span class="line">[Pipeline] stage</span><br><span class="line">[Pipeline] &#123; (Cloning Git)</span><br><span class="line">[Pipeline] tool</span><br><span class="line">[Pipeline] envVarsForTool</span><br><span class="line">[Pipeline] withEnv</span><br><span class="line">[Pipeline] &#123;</span><br><span class="line">[Pipeline] git</span><br><span class="line">using credential gitlab-skarl-passwd</span><br><span class="line"> &gt; git rev-parse --is-inside-work-tree # timeout=10</span><br><span class="line">Fetching changes from the remote Git repository</span><br><span class="line"> &gt; git config remote.origin.url https://xxx.xxxxxxx.com/bittorage/WebServer.git # timeout=10</span><br><span class="line">Fetching upstream changes from https://xxx.xxxxxxx.com/bittorage/WebServer.git</span><br><span class="line"> &gt; git --version # timeout=10</span><br><span class="line">using GIT_ASKPASS to set credentials gitlab-skarl-passwd</span><br><span class="line"> &gt; git fetch --tags --progress https://xxx.xxxxxxx.com/bittorage/WebServer.git +refs/heads/*:refs/remotes/origin/*</span><br><span class="line">skipping resolution of commit remotes/origin/develop, since it originates from another repository</span><br><span class="line"> &gt; git rev-parse refs/remotes/origin/develop^&#123;commit&#125; # timeout=10</span><br><span class="line"> &gt; git rev-parse refs/remotes/origin/origin/develop^&#123;commit&#125; # timeout=10</span><br><span class="line">Checking out Revision 449b52612009786e6e7ae37841f57b3602fc89ff (refs/remotes/origin/develop)</span><br><span class="line"> &gt; git config core.sparsecheckout # timeout=10</span><br><span class="line"> &gt; git checkout -f 449b52612009786e6e7ae37841f57b3602fc89ff</span><br><span class="line"> &gt; git branch -a -v --no-abbrev # timeout=10</span><br><span class="line"> &gt; git branch -D develop # timeout=10</span><br><span class="line"> &gt; git checkout -b develop 449b52612009786e6e7ae37841f57b3602fc89ff</span><br><span class="line">Commit message: &quot;모카 테스트 예제  추가&quot;</span><br><span class="line"> &gt; git rev-list --no-walk a7271488613cc3aeb66bd06be08603e458a57c40 # timeout=10</span><br><span class="line">[Pipeline] &#125;</span><br><span class="line">[Pipeline] // withEnv</span><br><span class="line">[Pipeline] &#125;</span><br><span class="line">[Pipeline] // stage</span><br><span class="line">[Pipeline] stage</span><br><span class="line">[Pipeline] &#123; (Install dependencies)</span><br><span class="line">[Pipeline] tool</span><br><span class="line">[Pipeline] envVarsForTool</span><br><span class="line">[Pipeline] withEnv</span><br><span class="line">[Pipeline] &#123;</span><br><span class="line">[Pipeline] sh</span><br><span class="line">+ npm install</span><br><span class="line">npm WARN webserver@0.1.0 No repository field.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.6 (node_modules/fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.6: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;linux&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line"> </span><br><span class="line">audited 17564 packages in 18.837s</span><br><span class="line">found 7 vulnerabilities (1 moderate, 6 high)</span><br><span class="line">  run `npm audit fix` to fix them, or `npm audit` for details</span><br><span class="line">[Pipeline] &#125;</span><br><span class="line">[Pipeline] // withEnv</span><br><span class="line">[Pipeline] &#125;</span><br><span class="line">[Pipeline] // stage</span><br><span class="line">[Pipeline] stage</span><br><span class="line">[Pipeline] &#123; (Test)</span><br><span class="line">[Pipeline] tool</span><br><span class="line">[Pipeline] envVarsForTool</span><br><span class="line">[Pipeline] withEnv</span><br><span class="line">[Pipeline] &#123;</span><br><span class="line">[Pipeline] sh</span><br><span class="line">+ npm test</span><br><span class="line"> </span><br><span class="line">&gt; webserver@0.1.0 test /var/lib/jenkins/workspace/pipe1</span><br><span class="line">&gt; mocha ./test/Websocket.test.ts --exit</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  Sample route</span><br><span class="line">Server is running in process 11973 listening on PORT 1344</span><br><span class="line"> </span><br><span class="line">Parsing session from request...</span><br><span class="line">no passport</span><br><span class="line">JHnljEKqdbSt48woI0AdXGC6IAZZnU91</span><br><span class="line">open</span><br><span class="line">undefined</span><br><span class="line">&#123;&quot;trCode&quot;:42,&quot;message&quot;: &#123;&#125; &#125;</span><br><span class="line">code= &#123; trCode: 42, message: &#123;&#125; &#125;</span><br><span class="line">setStorageSock</span><br><span class="line">2019-04-24 10:53:00,528 INFO [STORAGE:NOTICE:CONTROLLER] StorageNoticeController init</span><br><span class="line">faq key= 42</span><br><span class="line">msg Cannot read property &apos;publish&apos; of undefined</span><br><span class="line">key=== 42</span><br><span class="line">&#123; networkType: 0,</span><br><span class="line">  trCode: 42,</span><br><span class="line">  result: 0,</span><br><span class="line">  message:</span><br><span class="line">   [ &#123; createDate: null, lastModifiedDate: null &#125;] &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    ✓ STORAGE Test (104ms)</span><br><span class="line">after</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  1 passing (191ms)</span><br><span class="line"> </span><br><span class="line">[Pipeline] &#125;</span><br><span class="line">[Pipeline] // withEnv</span><br><span class="line">[Pipeline] &#125;</span><br><span class="line">[Pipeline] // stage</span><br><span class="line">[Pipeline] &#125;</span><br><span class="line">[Pipeline] // withEnv</span><br><span class="line">[Pipeline] &#125;</span><br><span class="line">[Pipeline] // node</span><br><span class="line">[Pipeline] End of Pipeline</span><br><span class="line">Triggering a new build of ansible-project #2</span><br><span class="line">Finished: SUCCESS</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;git-lab-설정에서-webhook-push-Event-이후-작성-정의-pipeline&quot;&gt;&lt;a href=&quot;#git-lab-설정에서-webhook-push-Event-이후-작성-정의-pipeline&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="jenkins" scheme="https://skarlsla.github.io/tags/jenkins/"/>
    
      <category term="pipeline" scheme="https://skarlsla.github.io/tags/pipeline/"/>
    
  </entry>
  
  <entry>
    <title>[NODEJS] EXPRESS(node.js) to WebSocket 세션 공유</title>
    <link href="https://skarlsla.github.io/2019/07/11/node-express-ws/"/>
    <id>https://skarlsla.github.io/2019/07/11/node-express-ws/</id>
    <published>2019-07-11T08:30:30.000Z</published>
    <updated>2019-07-11T08:22:24.310Z</updated>
    
    <content type="html"><![CDATA[<h3 id="EXPRESS-node-js-to-WebSocket-세션-공유"><a href="#EXPRESS-node-js-to-WebSocket-세션-공유" class="headerlink" title="EXPRESS(node.js) to WebSocket 세션 공유"></a>EXPRESS(node.js) to WebSocket 세션 공유</h3><p>Express로 웹서버 생성 후  서버 및 세션정보를 WebSocket으로 전달<br>WebSocket 서버 생성 시 verifyClient 옵션으로 세션 처리</p><p><strong>server.ts</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bodyParser <span class="keyword">from</span> <span class="string">"body-parser"</span>;</span><br><span class="line"><span class="keyword">import</span> cors <span class="keyword">from</span> <span class="string">"cors"</span>;</span><br><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">"express"</span>;</span><br><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">"http"</span>;</span><br><span class="line"><span class="keyword">import</span> methodOverride <span class="keyword">from</span> <span class="string">"method-override"</span>;</span><br><span class="line"><span class="keyword">import</span> morgan <span class="keyword">from</span> <span class="string">"morgan"</span>;</span><br><span class="line"><span class="keyword">import</span> session <span class="keyword">from</span> <span class="string">"express-session"</span>;</span><br><span class="line"><span class="keyword">import</span> passport <span class="keyword">from</span> <span class="string">"passport"</span>;</span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">"path"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; WS &#125; <span class="keyword">from</span> <span class="string">"./app/ws"</span>;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">Server</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* private static ConnectDB(): Promise&lt;any&gt; &#123;</span></span><br><span class="line"><span class="comment">        return Connection;</span></span><br><span class="line"><span class="comment">    &#125; */</span></span><br><span class="line">    private readonly app: express.Application;</span><br><span class="line">    private readonly server: http.Server;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">constructor</span>() &#123;</span><br><span class="line">        <span class="keyword">this</span>.app = express();</span><br><span class="line">        <span class="keyword">this</span>.server = http.createServer(<span class="keyword">this</span>.app);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"> .</span><br><span class="line"> .</span><br><span class="line"> .</span><br><span class="line"> </span><br><span class="line">    private ExpressConfiguration(): <span class="keyword">void</span> &#123;</span><br><span class="line">        <span class="comment">// const RedisStore = connectRedis(session);</span></span><br><span class="line">        <span class="keyword">const</span> cookieOptions = &#123;</span><br><span class="line">            maxAge: <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>,</span><br><span class="line">            <span class="comment">// secure:true, 브라우저가 HTTPS를 통해서만 쿠키를 전송하도록 합니다.</span></span><br><span class="line">            httpOnly: <span class="literal">false</span>,</span><br><span class="line">            <span class="comment">// 쿠키가 클라이언트 JavaScript가 아닌 HTTP(S)를 통해서만 전송되도록 하며, 이를 통해 XSS(Cross-site scripting) 공격으로부터 보호할 수 있습니다.</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">const</span> sessionInfo = &#123;</span><br><span class="line">            secret: <span class="string">"sec"</span>,</span><br><span class="line">            resave: <span class="literal">true</span>,</span><br><span class="line">            saveUninitialized: <span class="literal">true</span>,</span><br><span class="line">            cookie: cookieOptions,</span><br><span class="line">            <span class="comment">// store: new RedisStore(config.REDIS_OPTS),</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">this</span>.sessionOptions = session(sessionInfo);</span><br><span class="line">        <span class="keyword">this</span>.app.use(bodyParser.urlencoded(&#123;<span class="attr">extended</span>: <span class="literal">true</span>&#125;));</span><br><span class="line">        <span class="keyword">this</span>.app.use(bodyParser.json(&#123;<span class="attr">limit</span>: <span class="string">"50mb"</span>&#125;));</span><br><span class="line">        <span class="keyword">this</span>.app.use(<span class="keyword">this</span>.sessionOptions);</span><br><span class="line">        <span class="comment">/* this.app.use(session(</span></span><br><span class="line"><span class="comment">            &#123;</span></span><br><span class="line"><span class="comment">                resave: true,</span></span><br><span class="line"><span class="comment">                saveUninitialized: true,</span></span><br><span class="line"><span class="comment">                secret: config.SECRET,</span></span><br><span class="line"><span class="comment">                store: new RedisStore(config.REDIS_OPTS),</span></span><br><span class="line"><span class="comment">            &#125;,</span></span><br><span class="line"><span class="comment">        )); */</span></span><br><span class="line">        <span class="keyword">this</span>.app.use(passport.initialize());</span><br><span class="line">        <span class="keyword">this</span>.app.use(passport.session());</span><br><span class="line">        <span class="keyword">this</span>.app.use(methodOverride());</span><br><span class="line">        <span class="comment">// const viewpath = path.join(__dirname, "../views");</span></span><br><span class="line">        <span class="comment">// serverService.debug(viewpath);</span></span><br><span class="line">        <span class="comment">// this.app.set("views", "./views");</span></span><br><span class="line">        <span class="keyword">this</span>.app.set(<span class="string">'views'</span>, path.join(__dirname, <span class="string">'views'</span>));</span><br><span class="line">        <span class="keyword">this</span>.app.set(<span class="string">"view engine"</span>, <span class="string">"ejs"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.app.use((req, res, next): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">            res.header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>);</span><br><span class="line">            res.header(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"X-Requested-With, Content-Type, Authorization"</span>);</span><br><span class="line">            res.header(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"GET,PUT,PATCH,POST,DELETE,OPTIONS"</span>);</span><br><span class="line">            next();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">this</span>.app.use(morgan(<span class="string">"combined"</span>));</span><br><span class="line">        <span class="keyword">this</span>.app.use(cors());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.app.use((err: any, <span class="attr">req</span>: express.Request, <span class="attr">res</span>: express.Response, <span class="attr">next</span>: express.NextFunction): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">            err.status = <span class="number">404</span>;</span><br><span class="line">            next(err);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private setWebSocket(): <span class="keyword">void</span> &#123;</span><br><span class="line">        <span class="keyword">this</span>.ws = <span class="keyword">new</span> WS(<span class="keyword">this</span>.server, <span class="keyword">this</span>.sessionOptions);</span><br><span class="line">    &#125;       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ws.ts</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> WebSocket <span class="keyword">from</span> <span class="string">'ws'</span>;</span><br><span class="line"><span class="keyword">import</span> express, &#123; Router &#125; <span class="keyword">from</span> <span class="string">"express"</span>;</span><br><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">"http"</span>;</span><br><span class="line"></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="class"><span class="keyword">class</span> <span class="title">WS</span> </span>&#123;</span><br><span class="line">    private wss: WebSocket.Server;</span><br><span class="line">    private server: http.Server;</span><br><span class="line">    private session: express.RequestHandler;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">constructor</span>(server: http.Server, session: express.RequestHandler) &#123;</span><br><span class="line">        <span class="keyword">this</span>.server = server;</span><br><span class="line">        <span class="keyword">this</span>.session = session;</span><br><span class="line">        <span class="keyword">this</span>.init(server, session);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private init(serve: http.Server, <span class="attr">session</span>: any) &#123;</span><br><span class="line">        <span class="keyword">this</span>.wss = <span class="keyword">new</span> WebSocket.Server(&#123;</span><br><span class="line">            </span><br><span class="line">            verifyClient:<span class="function">(<span class="params">info: &#123;origin: string; secure: boolean; req: any &#125;, done</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'Parsing session from request...'</span>);</span><br><span class="line">                session(info.req,( )=&gt;&#123;&#125;, ()=&gt;&#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="keyword">this</span>.isSessionPassport(info.req))&#123;</span><br><span class="line">                        done(info.req.session);</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="comment">// done(false,401,'unathorized');</span></span><br><span class="line">                        done(<span class="literal">true</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="built_in">console</span>.log(info.req.session.id);</span><br><span class="line"></span><br><span class="line">                &#125;)                </span><br><span class="line">            &#125;, <span class="attr">server</span>: serve </span><br><span class="line">            , <span class="attr">path</span>: <span class="string">"/"</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">/* this.pushController = new PushController(this.wss);</span></span><br><span class="line"><span class="comment">        this.pushController.startPush(); */</span></span><br><span class="line">        <span class="keyword">this</span>.connection();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private connection()&#123;</span><br><span class="line">        <span class="keyword">this</span>.wss.on(<span class="string">"connection"</span>,(ws: WebSocket) =&gt; &#123;</span><br><span class="line">            <span class="comment">// this.pushController.broadcastPush("100" , "msg");</span></span><br><span class="line">            ws.on(<span class="string">"message"</span>, (msg: string) =&gt; &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(msg);                 </span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    private isSessionPassport(req: express.Request)&#123;</span><br><span class="line">        <span class="keyword">if</span>(req.session.passport &amp;&amp; req.session.passport.user)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(req.session.passport.user);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"no passport"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">                </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;EXPRESS-node-js-to-WebSocket-세션-공유&quot;&gt;&lt;a href=&quot;#EXPRESS-node-js-to-WebSocket-세션-공유&quot; class=&quot;headerlink&quot; title=&quot;EXPRESS(node.js) to WebS
      
    
    </summary>
    
      <category term="NODEJS" scheme="https://skarlsla.github.io/categories/NODEJS/"/>
    
    
      <category term="NODEJS" scheme="https://skarlsla.github.io/tags/NODEJS/"/>
    
      <category term="EXPRESS" scheme="https://skarlsla.github.io/tags/EXPRESS/"/>
    
      <category term="WebSocket" scheme="https://skarlsla.github.io/tags/WebSocket/"/>
    
  </entry>
  
  <entry>
    <title>[TYPESCRIPT] 타입스크립트 디자인 패턴 - Singleton</title>
    <link href="https://skarlsla.github.io/2019/07/11/pattern/"/>
    <id>https://skarlsla.github.io/2019/07/11/pattern/</id>
    <published>2019-07-11T07:24:30.000Z</published>
    <updated>2019-07-11T07:34:26.407Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Singleton-Pattern"><a href="#Singleton-Pattern" class="headerlink" title="Singleton Pattern"></a>Singleton Pattern</h3><p>The singleton pattern is a creational software design pattern.</p><p>클래스가 단 하나의 인스턴스 만 갖도록 보장한다.</p><p><strong>이점</strong></p><ol><li>하나의 인스턴스만 할당함으로 메모리낭비 방지.</li><li>하나의 프로세스에서 공유자원 접근시 이점</li><li>db커넥션풀, 로그 등에 사용됨.</li></ol><p><strong>단점</strong></p><ol><li>멀티 프로세스 상황에서 인스턴스공유 이슈 생길수있음</li><li>하나의 인스턴스로 많은 작업을 하게될 경우 문제</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123; </span><br><span class="line">    private <span class="keyword">static</span> instance: Singleton; </span><br><span class="line">    private _temperature: number; </span><br><span class="line">    private <span class="keyword">constructor</span>() &#123; &#125; </span><br><span class="line">    <span class="keyword">static</span> getInstance() &#123; </span><br><span class="line">        <span class="keyword">if</span> (!Singleton.instance) &#123; </span><br><span class="line">            Singleton.instance = <span class="keyword">new</span> Singleton(); </span><br><span class="line">            Singleton.instance._temperature = <span class="number">0</span>; </span><br><span class="line">            &#125; </span><br><span class="line">        <span class="keyword">return</span> Singleton.instance; </span><br><span class="line">    &#125; </span><br><span class="line">    get temperature(): number &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._temperature; </span><br><span class="line">    &#125; </span><br><span class="line">    set temperature(score) &#123; </span><br><span class="line">        <span class="keyword">this</span>._temperature = score; </span><br><span class="line">    &#125; </span><br><span class="line">    increaseTemperature(): number &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._temperature += <span class="number">1</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    decreaseTemperature(): number &#123; </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._temperature -= <span class="number">1</span>; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">const</span> myInstance = Singleton.getInstance(); </span><br><span class="line"><span class="keyword">const</span> myInstance2 = Singleton.getInstance(); </span><br><span class="line"><span class="built_in">console</span>.log(myInstance === myInstance2); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Singleton-Pattern&quot;&gt;&lt;a href=&quot;#Singleton-Pattern&quot; class=&quot;headerlink&quot; title=&quot;Singleton Pattern&quot;&gt;&lt;/a&gt;Singleton Pattern&lt;/h3&gt;&lt;p&gt;The single
      
    
    </summary>
    
      <category term="patterns" scheme="https://skarlsla.github.io/categories/patterns/"/>
    
    
      <category term="typescript" scheme="https://skarlsla.github.io/tags/typescript/"/>
    
      <category term="singleton" scheme="https://skarlsla.github.io/tags/singleton/"/>
    
      <category term="pattern" scheme="https://skarlsla.github.io/tags/pattern/"/>
    
  </entry>
  
  <entry>
    <title>[NODEJS] TypeScript with Node.js </title>
    <link href="https://skarlsla.github.io/2019/07/10/node-with-type/"/>
    <id>https://skarlsla.github.io/2019/07/10/node-with-type/</id>
    <published>2019-07-10T11:40:30.000Z</published>
    <updated>2019-07-11T08:38:19.173Z</updated>
    
    <content type="html"><![CDATA[<h3 id="NODEJS-TypeScript-with-Node-js"><a href="#NODEJS-TypeScript-with-Node-js" class="headerlink" title="[NODEJS] TypeScript with Node.js ?"></a>[NODEJS] TypeScript with Node.js ?</h3><ol><li><p>프로젝트 폴더 생성 </p></li><li><p>init</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure></li><li><p>타입스크립트 설치</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g typescript</span><br></pre></td></tr></table></figure></li><li><p>타입설정 초기화</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc — init</span><br></pre></td></tr></table></figure></li><li><p>tsconfig.json 수정</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"compilerOptions"</span>: &#123;</span><br><span class="line">    <span class="comment">/* Basic Options */</span></span><br><span class="line">    <span class="string">"target"</span>: <span class="string">"es5"</span>,                          <span class="comment">/* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */</span></span><br><span class="line">    <span class="string">"module"</span>: <span class="string">"commonjs"</span>,                     <span class="comment">/* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */</span></span><br><span class="line">    <span class="string">"outDir"</span>: <span class="string">"./dist"</span>,                        <span class="comment">/* Redirect output structure to the directory. */</span></span><br><span class="line">    <span class="string">"strict"</span>: <span class="literal">true</span>,                           <span class="comment">/* Enable all strict type-checking options. */</span></span><br><span class="line">    <span class="string">"esModuleInterop"</span>: <span class="literal">true</span>                   <span class="comment">/* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */</span></span><br><span class="line">​</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"include"</span>: [</span><br><span class="line">    <span class="string">"./src/**/*"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>​</p><ol start="6"><li><p>폴더생성 ./src ./dist</p></li><li><p>.src/test.ts 작성</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    private hello: <span class="built_in">String</span> = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">constructor</span>(private name: String) &#123;</span><br><span class="line">        <span class="keyword">this</span>.hello = name + <span class="string">" Hello~"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public getHello(): <span class="built_in">String</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.hello;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> person: Person = <span class="keyword">new</span> Person(<span class="string">"namgi"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(person.getHello());</span><br></pre></td></tr></table></figure></li><li><p>tsc 컴파일</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc</span><br></pre></td></tr></table></figure></li><li><p>js 파일 실행</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node ./dist/test.js</span><br></pre></td></tr></table></figure></li><li><p>결과물 확인<br><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FNqjy6%2FbtqwyOUXEz4%2F9fO6Y00sqZWNDucdOqzfA0%2Fimg.png" alt="결과"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;NODEJS-TypeScript-with-Node-js&quot;&gt;&lt;a href=&quot;#NODEJS-TypeScript-with-Node-js&quot; class=&quot;headerlink&quot; title=&quot;[NODEJS] TypeScript with Node.js
      
    
    </summary>
    
      <category term="NODEJS" scheme="https://skarlsla.github.io/categories/NODEJS/"/>
    
    
      <category term="NODEJS" scheme="https://skarlsla.github.io/tags/NODEJS/"/>
    
      <category term="타입스크립트" scheme="https://skarlsla.github.io/tags/%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/"/>
    
      <category term="typescript" scheme="https://skarlsla.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>[NODEJS] 타입스크립트(typescript) ?</title>
    <link href="https://skarlsla.github.io/2019/07/10/node-type/"/>
    <id>https://skarlsla.github.io/2019/07/10/node-type/</id>
    <published>2019-07-10T08:40:30.000Z</published>
    <updated>2019-07-11T08:27:21.740Z</updated>
    
    <content type="html"><![CDATA[<h3 id="NODEJS-타입스크립트-typescript"><a href="#NODEJS-타입스크립트-typescript" class="headerlink" title="[NODEJS] 타입스크립트(typescript) ?"></a>[NODEJS] 타입스크립트(typescript) ?</h3><p>TypeScript는 마이크로소프트에서 2012년 발표한 오픈소스라고 한다.</p><p>정적 타이핑을 지원하며 ES6(ECMAScript 2015)의 클래스, 모듈 등과 ES7의 Decorator 등을 지원한다.</p><p>ES6의 새로운 기능들을 사용하기 위해 Babel과 같은 별도 트랜스파일러(Transpiler)를 사용하지 않아도 ES6의 새로운 기능을 기존의 자바스크립트 엔진(현재의 브라우저 또는 Node.js)에서 실행할 수 있다.</p><p><strong><em>특징?</em></strong></p><p>이름에서 알수 있듯이 모든 변수나 반환값에 타입을 지정해야한다. 미리 에러를 알 수 있겠다.</p><p>“TypeScript는 정적 타입을 지원하므로 컴파일 단계에서 오류를 포착할 수 있는 장점이 있다. 명시적인 정적 타입 지정은 개발자의 의도를 명확하게 코드로 기술할 수 있다. 이는 코드의 가독성을 높이고 예측할 수 있게 하며 디버깅을 쉽게 한다.”  라고한다.</p><p>인터페이스나 제네릭과 같은 객체지향 프로그래밍을 지원한다.  자바나 C#개발자들이 자바스크립트 프로젝트를 개발하는데 도움을 줄수있겠다.</p><p><strong><em>사용법?</em></strong></p><p>npm install -g typescript  설치 후</p><p>.ts로 작성후 tsc 명령어로 컴파일하면 .js 파일로 떨궈준다.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;NODEJS-타입스크립트-typescript&quot;&gt;&lt;a href=&quot;#NODEJS-타입스크립트-typescript&quot; class=&quot;headerlink&quot; title=&quot;[NODEJS] 타입스크립트(typescript) ?&quot;&gt;&lt;/a&gt;[NODEJS] 
      
    
    </summary>
    
      <category term="NODEJS" scheme="https://skarlsla.github.io/categories/NODEJS/"/>
    
    
      <category term="NODEJS" scheme="https://skarlsla.github.io/tags/NODEJS/"/>
    
      <category term="타입스크립트" scheme="https://skarlsla.github.io/tags/%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8/"/>
    
      <category term="typescript" scheme="https://skarlsla.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>[ANSIBLE] - PLAYBOOK WITH WEBSERVER</title>
    <link href="https://skarlsla.github.io/2019/05/09/ANSIBLE-PLAYBOOK-WITH-WEBSERVER/"/>
    <id>https://skarlsla.github.io/2019/05/09/ANSIBLE-PLAYBOOK-WITH-WEBSERVER/</id>
    <published>2019-05-09T07:27:15.000Z</published>
    <updated>2019-07-15T09:00:28.836Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="playbook-구조"><a href="#playbook-구조" class="headerlink" title="playbook 구조"></a>playbook 구조</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/playbook_structure.png" alt="작동 싸이클"></p><hr><h3 id="webserver-yml"><a href="#webserver-yml" class="headerlink" title="webserver.yml"></a>webserver.yml</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">- hosts: webservers</span><br><span class="line">  remote_user: root</span><br><span class="line">  become: no</span><br><span class="line">  vars:</span><br><span class="line">    git_user : nkyoon@xxx.com</span><br><span class="line">    git_password :</span><br><span class="line">    webapp_name: webserver</span><br><span class="line">    webapp_path: /home/WebServer</span><br><span class="line">  roles:</span><br><span class="line">    - yum_packages</span><br><span class="line">    - app.source</span><br></pre></td></tr></table></figure><hr><h3 id="yum-packages-tasks-main-yml"><a href="#yum-packages-tasks-main-yml" class="headerlink" title="yum_packages/tasks/main.yml"></a>yum_packages/tasks/main.yml</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- name: nodejs repo</span><br><span class="line">  shell: <span class="string">"curl --silent --location https://rpm.nodesource.com/setup_10.x | sudo bash -"</span></span><br><span class="line"> </span><br><span class="line">- name: <span class="string">"Installing PKG"</span></span><br><span class="line">  yum:</span><br><span class="line">    state: present</span><br><span class="line">    name:</span><br><span class="line">      - git</span><br><span class="line">      - gcc-c++</span><br><span class="line">      - make</span><br><span class="line">      - nodejs</span><br><span class="line"> </span><br><span class="line">- name: install pm2</span><br><span class="line">  npm: name=pm2 global=<span class="literal">true</span> production=<span class="literal">true</span></span><br></pre></td></tr></table></figure><hr><h3 id="app-source-tasks-main-yml"><a href="#app-source-tasks-main-yml" class="headerlink" title="app.source/tasks/main.yml"></a>app.source/tasks/main.yml</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">- name: pull from git</span><br><span class="line">  git:</span><br><span class="line">    repo: https://&#123;&#123; git_user | urlencode &#125;&#125;:&#123;&#123; git_password | urlencode &#125;&#125;@git.xxxxx.com/xxx/WebServer.git</span><br><span class="line">    dest: <span class="string">"&#123;&#123; webapp_path &#125;&#125;"</span></span><br><span class="line">    update: yes</span><br><span class="line">    force: yes</span><br><span class="line">    version: develop</span><br><span class="line"> </span><br><span class="line"><span class="comment">## npm 의존성 모듈을 설치</span></span><br><span class="line">- name: install dependencies</span><br><span class="line">  shell: <span class="string">"cd &#123;&#123; webapp_path &#125;&#125; &amp;&amp; npm install "</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">## npm build  -&gt; dist</span></span><br><span class="line">- name: npm build</span><br><span class="line">  shell: <span class="string">"cd &#123;&#123; webapp_path &#125;&#125; &amp;&amp; npm run-script build"</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">## 앱의 설치 상태를 확인</span></span><br><span class="line">- name: check <span class="keyword">for</span> webapp</span><br><span class="line">  shell: <span class="string">"pm2 show &#123;&#123; webapp_name &#125;&#125;"</span></span><br><span class="line">  register: webapp_result</span><br><span class="line">  ignore_errors: <span class="literal">true</span></span><br><span class="line">  become: <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">## 기존의 앱을 종료</span></span><br><span class="line">- name: stop webapp</span><br><span class="line">  shell: <span class="string">"pm2 stop &#123;&#123; webapp_name &#125;&#125;"</span></span><br><span class="line">  when: <span class="string">"webapp_status.rc == 0"</span></span><br><span class="line">  ignore_errors: <span class="literal">true</span></span><br><span class="line">  become: <span class="literal">true</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">## 앱 실행</span></span><br><span class="line">- name: start webapp</span><br><span class="line">  shell: <span class="string">"cd &#123;&#123; webapp_path &#125;&#125; &amp;&amp; pm2 start pm2-config.json"</span></span><br><span class="line">  become: <span class="literal">true</span></span><br></pre></td></tr></table></figure><hr><h3 id="배포-테스트"><a href="#배포-테스트" class="headerlink" title="배포 테스트"></a>배포 테스트</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@tcid ansible]<span class="comment"># ansible-playbook webserver.yml</span></span><br><span class="line">PLAY [webservers] ******************************************************************************************************************************************************************************************</span><br><span class="line"> </span><br><span class="line">TASK [Gathering Facts] *************************************************************************************************************************************************************************************</span><br><span class="line">ok: [xxx.xxx.xxx.xxx]</span><br><span class="line"> </span><br><span class="line">TASK [yum_packages : nodejs repo] **************************************************************************************************************************************************************************</span><br><span class="line"> [WARNING]: Consider using the get_url or uri module rather than running <span class="string">'curl'</span>.  If you need to use <span class="built_in">command</span> because get_url or uri is insufficient you can add <span class="string">'warn: false'</span> to this <span class="built_in">command</span> task or <span class="built_in">set</span></span><br><span class="line"><span class="string">'command_warnings=False'</span> <span class="keyword">in</span> ansible.cfg to get rid of this message.</span><br><span class="line"> </span><br><span class="line">changed: [xxx.xxx.xxx.xxx]</span><br><span class="line"> </span><br><span class="line">TASK [yum_packages : Installing PKG] ***********************************************************************************************************************************************************************</span><br><span class="line">ok: [xxx.xxx.xxx.xxx]</span><br><span class="line"> </span><br><span class="line">TASK [yum_packages : install pm2] **************************************************************************************************************************************************************************</span><br><span class="line">ok: [xxx.xxx.xxx.xxx]</span><br><span class="line"> </span><br><span class="line">TASK [app.source : pull from git] **************************************************************************************************************************************************************************</span><br><span class="line">changed: [xxx.xxx.xxx.xxx]</span><br><span class="line"> </span><br><span class="line">TASK [app.source : install dependencies] *******************************************************************************************************************************************************************</span><br><span class="line">changed: [xxx.xxx.xxx.xxx]</span><br><span class="line"> </span><br><span class="line">TASK [app.source : npm build] ******************************************************************************************************************************************************************************</span><br><span class="line"> </span><br><span class="line">TASK [app.source : check <span class="keyword">for</span> webapp] ***********************************************************************************************************************************************************************</span><br><span class="line">changed: [xxx.xxx.xxx.xxx]</span><br><span class="line"> </span><br><span class="line">TASK [app.source : stop webapp] ****************************************************************************************************************************************************************************</span><br><span class="line">fatal: [xxx.xxx.xxx.xxx]: FAILED! =&gt; &#123;<span class="string">"msg"</span>: <span class="string">"The conditional check 'webapp_status.rc == 0' failed. The error was: error while evaluating conditional (webapp_status.rc == 0): 'webapp_status' is undefined\n\nThe error appears to have been in '/etc/ansible/roles/app.source/tasks/main.yml': line 25, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n## 기존의 앱을 종료\n- name: stop webapp\n  ^ here\n"</span>&#125;</span><br><span class="line">...ignoring</span><br><span class="line"> </span><br><span class="line">TASK [app.source : start webapp] ***************************************************************************************************************************************************************************</span><br><span class="line">changed: [xxx.xxx.xxx.xxx]</span><br><span class="line"> </span><br><span class="line">PLAY RECAP *************************************************************************************************************************************************************************************************</span><br><span class="line">xxx.xxx.xxx.xxx            : ok=10   changed=6    unreachable=0    failed=0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;playbook-구조&quot;&gt;&lt;a href=&quot;#playbook-구조&quot; class=&quot;headerlink&quot; title=&quot;playbook 구조&quot;&gt;&lt;/a&gt;playbook 구조&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubu
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="배포" scheme="https://skarlsla.github.io/tags/%EB%B0%B0%ED%8F%AC/"/>
    
      <category term="CD" scheme="https://skarlsla.github.io/tags/CD/"/>
    
  </entry>
  
  <entry>
    <title>[ANSIBLE] - PLAYBOOK 작성</title>
    <link href="https://skarlsla.github.io/2019/05/09/ANSIBLE-PLAYBOOK-%EC%9E%91%EC%84%B1/"/>
    <id>https://skarlsla.github.io/2019/05/09/ANSIBLE-PLAYBOOK-작성/</id>
    <published>2019-05-09T07:23:03.000Z</published>
    <updated>2019-07-15T09:00:04.732Z</updated>
    
    <content type="html"><![CDATA[<p>playbook :<br>설정파일(YAML)에 미리 정의하여 원격 노드서버의 구성 및 배포를 관리 할수있다. </p><hr><p>example<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: webservers   <span class="comment"># /etc/ansible/hosts에 정의된 [webservers] 그룹</span></span><br><span class="line">  vars:</span><br><span class="line">    http_port: 80    </span><br><span class="line">    max_clients: 200</span><br><span class="line">  remote_user: root   <span class="comment"># 작업유저</span></span><br><span class="line">  tasks:  <span class="comment"># 작업리스트</span></span><br><span class="line">  - name: ensure apache is at the latest version</span><br><span class="line">    yum:  <span class="comment"># 패키지 설치</span></span><br><span class="line">      name: httpd</span><br><span class="line">      state: latest</span><br><span class="line">  - name: write the apache config file</span><br><span class="line">    template: <span class="comment"># 파일 복사</span></span><br><span class="line">      src: /srv/httpd.j2</span><br><span class="line">      dest: /etc/httpd.conf</span><br><span class="line">    notify: <span class="comment"># handlers 노티</span></span><br><span class="line">    - restart apache</span><br><span class="line">  - name: ensure apache is running</span><br><span class="line">    service: <span class="comment">#서비스 실행</span></span><br><span class="line">      name: httpd</span><br><span class="line">      state: started</span><br><span class="line">  handlers: <span class="comment"># 노티를 listen</span></span><br><span class="line">    - name: restart apache</span><br><span class="line">      service:</span><br><span class="line">        name: httpd</span><br><span class="line">        state: restarted</span><br></pre></td></tr></table></figure></p><p>작성된 playbook 실행<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook playbook.yml -f 10 <span class="comment"># 병렬처리 레벨 10</span></span><br></pre></td></tr></table></figure></p><p>팁 명령어 옵션  –syntax-check  flag<br>에러 체크해쥼</p><p>ansible-playbook playbook.yml –list-hosts # host 목록확인</p><p>참고: <a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks.html" target="_blank" rel="noopener">https://docs.ansible.com/ansible/latest/user_guide/playbooks.html</a><br>playbook 문법: <a href="https://taesany.tistory.com/139" target="_blank" rel="noopener">https://taesany.tistory.com/139</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;playbook :&lt;br&gt;설정파일(YAML)에 미리 정의하여 원격 노드서버의 구성 및 배포를 관리 할수있다. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;example&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="배포" scheme="https://skarlsla.github.io/tags/%EB%B0%B0%ED%8F%AC/"/>
    
      <category term="CD" scheme="https://skarlsla.github.io/tags/CD/"/>
    
  </entry>
  
  <entry>
    <title>[JENKINS] - ANSIBLE 연동</title>
    <link href="https://skarlsla.github.io/2019/05/08/JENKINS-ANSIBLE-%EC%97%B0%EB%8F%99/"/>
    <id>https://skarlsla.github.io/2019/05/08/JENKINS-ANSIBLE-연동/</id>
    <published>2019-05-08T03:25:42.000Z</published>
    <updated>2019-07-15T09:01:31.031Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="1-플러그인-설치-ansible-plugin"><a href="#1-플러그인-설치-ansible-plugin" class="headerlink" title="1. 플러그인 설치 ansible plugin"></a>1. 플러그인 설치 ansible plugin</h3><hr><h3 id="2-Global-Tool-Config"><a href="#2-Global-Tool-Config" class="headerlink" title="2. Global Tool Config"></a>2. Global Tool Config</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-19_11-26-29.png" alt="Alt text"></p><hr><h3 id="3-Credential-추가-system-global-credentials"><a href="#3-Credential-추가-system-global-credentials" class="headerlink" title="3. Credential 추가 - system - global credentials"></a>3. Credential 추가 - system - global credentials</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-19_11-27-52.png" alt="Alt text"></p><hr><h3 id="4-빌드-추가-invoke-ansible-ad-hoc-command"><a href="#4-빌드-추가-invoke-ansible-ad-hoc-command" class="headerlink" title="4. 빌드 추가  invoke ansible ad-hoc command"></a>4. 빌드 추가  invoke ansible ad-hoc command</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-19_11-29-28.png" alt="Alt text"></p><hr><h3 id="5-credential-등록을-했음에도-에러가-난다…"><a href="#5-credential-등록을-했음에도-에러가-난다…" class="headerlink" title="5. credential 등록을 했음에도  에러가 난다…"></a>5. credential 등록을 했음에도  에러가 난다…</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-19_11-30-37.png" alt="Alt text"></p><hr><h3 id="6-jenkins-권한으로도-ssh-key를-등록해야한다"><a href="#6-jenkins-권한으로도-ssh-key를-등록해야한다" class="headerlink" title="6.  jenkins 권한으로도  ssh key를 등록해야한다."></a>6.  jenkins 권한으로도  ssh key를 등록해야한다.</h3><p>root에서는 ansible all -a “ls” 명령이 잘된다.</p><p>jenkins로 변경 후 테스트<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/bash jenkins</span><br><span class="line">xxx.xxx.xxx.xxx | UNREACHABLE! =&gt; &#123;</span><br><span class="line"><span class="string">"changed"</span>: <span class="literal">false</span>, </span><br><span class="line"><span class="string">"msg"</span>: <span class="string">"Failed to connect to the host via ssh: Warning: Permanently added 'xxx.xxx.xxx.xxx' (ECDSA) to the list of known hosts.\r\nPermission denied (publickey,gssapi-keyex,gssapi-with-mic,password)."</span>, </span><br><span class="line"><span class="string">"unreachable"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>ssh 위치는  /var/lib/jenkins/.ssh</p><p>root .ssh/ 파일들을 복사해준다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ansible all -a <span class="string">"ls"</span> </span><br><span class="line"></span><br><span class="line">xxx.xxx.xxx.xxx | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">1</span><br><span class="line">cx</span><br><span class="line">node-v10.13.0</span><br><span class="line">node-v10.13.0-linux-x64</span><br><span class="line">node-v10.13.0-linux-x64.tar</span><br><span class="line">node-v10.13.0.tar.gz</span><br><span class="line">remi-release-7.5-2.el7.remi.noarch.rpm</span><br><span class="line">zabbix-agent-3.4.11-1.el7.x86_64.rpm</span><br><span class="line">zabbix-tcp-master</span><br><span class="line">Finished: SUCCESS</span><br></pre></td></tr></table></figure><hr><h3 id="7-최종-빌드-테스트"><a href="#7-최종-빌드-테스트" class="headerlink" title="7. 최종 빌드 테스트"></a>7. 최종 빌드 테스트</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-19_11-37-23.png" alt="Alt text"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;1-플러그인-설치-ansible-plugin&quot;&gt;&lt;a href=&quot;#1-플러그인-설치-ansible-plugin&quot; class=&quot;headerlink&quot; title=&quot;1. 플러그인 설치 ansible plugin&quot;&gt;&lt;/a&gt;1. 플러그인 
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="jenkins" scheme="https://skarlsla.github.io/tags/jenkins/"/>
    
      <category term="ci" scheme="https://skarlsla.github.io/tags/ci/"/>
    
  </entry>
  
  <entry>
    <title>[ANSIBLE] Ad-Hoc</title>
    <link href="https://skarlsla.github.io/2019/05/08/ANSIBLE-Ad-Hoc/"/>
    <id>https://skarlsla.github.io/2019/05/08/ANSIBLE-Ad-Hoc/</id>
    <published>2019-05-08T03:18:17.000Z</published>
    <updated>2019-07-15T09:21:24.521Z</updated>
    
    <content type="html"><![CDATA[<p>커맨드 명령으로 원격지 /etc/ansible/hosts 에 정의된 서버노드들에 대해 명령을 보낸다.</p><hr><h3 id="EXAMPLE"><a href="#EXAMPLE" class="headerlink" title="EXAMPLE"></a>EXAMPLE</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webservers -a <span class="string">"ls -al"</span></span><br></pre></td></tr></table></figure><p>파일전송<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible webservers -m file -a <span class="string">"dest=/path/to/c mode=755 owner=mdehaan group=mdehaan state=directory"</span></span><br></pre></td></tr></table></figure></p><p>yum 설치<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible webservers -m yum -a <span class="string">"name=acme state=absent"</span></span><br></pre></td></tr></table></figure></p><p>GIT 명령<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible webservers -m git -a <span class="string">"repo=https://foo.example.org/repo.git dest=/srv/myapp version=HEAD"</span></span><br></pre></td></tr></table></figure></p><p>서비스 관리<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ansible webservers -m service -a <span class="string">"name=httpd state=restarted"</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;커맨드 명령으로 원격지 /etc/ansible/hosts 에 정의된 서버노드들에 대해 명령을 보낸다.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&quot;EXAMPLE&quot;&gt;&lt;a href=&quot;#EXAMPLE&quot; class=&quot;headerlink&quot; title=&quot;EXAMPLE&quot;&gt;
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="배포" scheme="https://skarlsla.github.io/tags/%EB%B0%B0%ED%8F%AC/"/>
    
      <category term="cd" scheme="https://skarlsla.github.io/tags/cd/"/>
    
  </entry>
  
  <entry>
    <title>[ANSIBLE] NODE 등록 </title>
    <link href="https://skarlsla.github.io/2019/05/08/ANSIBLE-NODE-%EB%93%B1%EB%A1%9D/"/>
    <id>https://skarlsla.github.io/2019/05/08/ANSIBLE-NODE-등록/</id>
    <published>2019-05-08T03:01:26.000Z</published>
    <updated>2019-07-15T08:59:27.939Z</updated>
    
    <content type="html"><![CDATA[<p>Ansible은 모든 target node 작업을 ssh 기반으로 접근하여 처리한다.</p><p>타 시스템으로 접근하여 작업을 하기 위해 ID/PASS 없이 암호화된 키를 전달하여 상호 인증하는 환경을 구성해야 한다.</p><hr><h3 id="1-Ansible-Hosts-파일에-노드-등록"><a href="#1-Ansible-Hosts-파일에-노드-등록" class="headerlink" title="1. Ansible Hosts 파일에 노드 등록"></a>1. Ansible Hosts 파일에 노드 등록</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ansible/hosts</span><br><span class="line"></span><br><span class="line">[webservers]</span><br><span class="line">xxx.xxx.xxx.xxx</span><br></pre></td></tr></table></figure><hr><h3 id="2-SSH-Key-생성"><a href="#2-SSH-Key-생성" class="headerlink" title="2. SSH Key 생성"></a>2. SSH Key 생성</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"nkyoon@xxx.com"</span></span><br><span class="line"><span class="built_in">cd</span> ./.ssh/</span><br><span class="line">cp id_rsa.pub authorized_keys</span><br></pre></td></tr></table></figure><hr><h3 id="3-SSH-Key-NODE로-복사"><a href="#3-SSH-Key-NODE로-복사" class="headerlink" title="3. SSH Key NODE로 복사"></a>3. SSH Key NODE로 복사</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh root@web01 <span class="string">"mkdir ./.ssh;chmod 700 ./.ssh"</span></span><br><span class="line">scp authorized_keys root@01:~/.ssh/authorized_keys </span><br><span class="line"></span><br><span class="line">ansible webservers -m ping  <span class="comment">#테스트</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Ansible은 모든 target node 작업을 ssh 기반으로 접근하여 처리한다.&lt;/p&gt;
&lt;p&gt;타 시스템으로 접근하여 작업을 하기 위해 ID/PASS 없이 암호화된 키를 전달하여 상호 인증하는 환경을 구성해야 한다.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 i
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="배포" scheme="https://skarlsla.github.io/tags/%EB%B0%B0%ED%8F%AC/"/>
    
      <category term="cd" scheme="https://skarlsla.github.io/tags/cd/"/>
    
  </entry>
  
  <entry>
    <title>[JENKINS] GitLab 연동 및 빌드 테스트</title>
    <link href="https://skarlsla.github.io/2019/05/08/GitLab-%EC%97%B0%EB%8F%99-%EB%B0%8F-%EB%B9%8C%EB%93%9C-%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    <id>https://skarlsla.github.io/2019/05/08/GitLab-연동-및-빌드-테스트/</id>
    <published>2019-05-08T02:43:15.000Z</published>
    <updated>2019-07-15T09:01:13.652Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="1-소스-코드-관리"><a href="#1-소스-코드-관리" class="headerlink" title="1. 소스 코드 관리"></a>1. 소스 코드 관리</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-16_18-2-36.png" alt="Alt text"></p><hr><h3 id="2-URL-연결시-ssl-이슈"><a href="#2-URL-연결시-ssl-이슈" class="headerlink" title="2. URL 연결시  ssl 이슈"></a>2. URL 연결시  ssl 이슈</h3><p>jenkins 관리 - 시스템설정 - 환경변수 추가</p><p>GIT_SSL_NO_VERIFY , true</p><hr><h3 id="3-빌드유발-웹훅-주소-획득"><a href="#3-빌드유발-웹훅-주소-획득" class="headerlink" title="3. 빌드유발 - 웹훅 주소 획득"></a>3. 빌드유발 - 웹훅 주소 획득</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/jenkins_build.png" alt="Alt text"></p><hr><h3 id="4-gitlab-프로젝트-설정-integrations"><a href="#4-gitlab-프로젝트-설정-integrations" class="headerlink" title="4. gitlab - 프로젝트 - 설정- integrations"></a>4. gitlab - 프로젝트 - 설정- integrations</h3><p>웹훅 url 입력 <a href="http://jenkins.xxx.com:9090/project/gitlab-devops-test" target="_blank" rel="noopener">http://jenkins.xxx.com:9090/project/gitlab-devops-test</a></p><p>푸쉬 이벤트시 빌드 유발</p><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-16_18-6-29.png" alt="Alt text"></p><hr><h3 id="5-웹훅-처리를-위한-아웃바운드-허용-ADMIN-설정"><a href="#5-웹훅-처리를-위한-아웃바운드-허용-ADMIN-설정" class="headerlink" title="5. 웹훅 처리를 위한 아웃바운드 허용 -  ADMIN- 설정"></a>5. 웹훅 처리를 위한 아웃바운드 허용 -  ADMIN- 설정</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-16_18-9-50.png" alt="Alt text"></p><hr><h3 id="6-빌드-시-작업-테스트"><a href="#6-빌드-시-작업-테스트" class="headerlink" title="6.  빌드 시 작업 테스트"></a>6.  빌드 시 작업 테스트</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-16_18-8-40.png" alt="Alt text"></p><hr><h3 id="7-푸쉬-이벤트-발생시-젠킨스-빌드"><a href="#7-푸쉬-이벤트-발생시-젠킨스-빌드" class="headerlink" title="7. 푸쉬 이벤트 발생시  젠킨스 빌드"></a>7. 푸쉬 이벤트 발생시  젠킨스 빌드</h3><p><img src="https://raw.githubusercontent.com/skarlsla/skarlsla.github.io/master/css/image/image2019-4-16_18-7-37.png" alt="Alt text"></p><p>참고: <a href="http://egloos.zum.com/mcchae/v/11246199" target="_blank" rel="noopener">http://egloos.zum.com/mcchae/v/11246199</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;1-소스-코드-관리&quot;&gt;&lt;a href=&quot;#1-소스-코드-관리&quot; class=&quot;headerlink&quot; title=&quot;1. 소스 코드 관리&quot;&gt;&lt;/a&gt;1. 소스 코드 관리&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubuse
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="jenkins" scheme="https://skarlsla.github.io/tags/jenkins/"/>
    
      <category term="gitlab" scheme="https://skarlsla.github.io/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title>배포 자동화(CI/CD) AutoMation Architecture</title>
    <link href="https://skarlsla.github.io/2019/04/29/devops-auto/"/>
    <id>https://skarlsla.github.io/2019/04/29/devops-auto/</id>
    <published>2019-04-29T08:50:24.000Z</published>
    <updated>2019-07-16T02:43:39.557Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="CI-CD-Automation-Architecture"><a href="#CI-CD-Automation-Architecture" class="headerlink" title="CI/CD Automation Architecture"></a>CI/CD Automation Architecture</h3><p><img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&amp;fname=https%3A%2F%2Fk.kakaocdn.net%2Fdn%2FbiGalK%2Fbtqwx3ZB462%2FyzteEkSKW4kIghd9KVp5W1%2Fimg.jpg" alt="GITLAB-JENKINS-ANSIBLE"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;CI-CD-Automation-Architecture&quot;&gt;&lt;a href=&quot;#CI-CD-Automation-Architecture&quot; class=&quot;headerlink&quot; title=&quot;CI/CD Automation Architecture
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="CD" scheme="https://skarlsla.github.io/tags/CD/"/>
    
      <category term="devops" scheme="https://skarlsla.github.io/tags/devops/"/>
    
      <category term="CI/CD" scheme="https://skarlsla.github.io/tags/CI-CD/"/>
    
      <category term="CI" scheme="https://skarlsla.github.io/tags/CI/"/>
    
  </entry>
  
  <entry>
    <title>[ANSIBLE] 설치 및 설정 for centos</title>
    <link href="https://skarlsla.github.io/2019/04/29/ANSIBLE-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/"/>
    <id>https://skarlsla.github.io/2019/04/29/ANSIBLE-설치-및-설정/</id>
    <published>2019-04-29T08:23:56.000Z</published>
    <updated>2019-07-15T09:00:14.795Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="1-ANSIBLE-설치"><a href="#1-ANSIBLE-설치" class="headerlink" title="1. ANSIBLE 설치"></a>1. ANSIBLE 설치</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class="line">yum -y install ansible</span><br></pre></td></tr></table></figure><hr><h3 id="2-ANSIBLE-타워설치"><a href="#2-ANSIBLE-타워설치" class="headerlink" title="2. ANSIBLE 타워설치"></a>2. ANSIBLE 타워설치</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-latest.tar.gz</span><br><span class="line">tar xvfz ansible-tower-setup-latest.tar.gz</span><br><span class="line"><span class="built_in">cd</span> ansible-tower-setup-3.4.3-1/</span><br><span class="line">vi inventory   <span class="comment">#설정파일</span></span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure><hr><h3 id="3-접속확인"><a href="#3-접속확인" class="headerlink" title="3. 접속확인"></a>3. 접속확인</h3><p>https://[serverIP]:80<br>admin / password(inventory에서 설정한 pw)</p><hr><h3 id="4-비밀번호-변경"><a href="#4-비밀번호-변경" class="headerlink" title="4. 비밀번호 변경"></a>4. 비밀번호 변경</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@tcid]<span class="comment"># tower-manage  changepassword admin</span></span><br><span class="line"></span><br><span class="line">Changing password <span class="keyword">for</span> user <span class="string">'admin'</span></span><br><span class="line">Password:</span><br><span class="line">Password (again):</span><br><span class="line">Password changed successfully <span class="keyword">for</span> user <span class="string">'admin'</span></span><br><span class="line">You have new mail <span class="keyword">in</span> /var/spool/mail/root</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;1-ANSIBLE-설치&quot;&gt;&lt;a href=&quot;#1-ANSIBLE-설치&quot; class=&quot;headerlink&quot; title=&quot;1. ANSIBLE 설치&quot;&gt;&lt;/a&gt;1. ANSIBLE 설치&lt;/h3&gt;&lt;figure class=&quot;highlight b
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="배포" scheme="https://skarlsla.github.io/tags/%EB%B0%B0%ED%8F%AC/"/>
    
      <category term="cd" scheme="https://skarlsla.github.io/tags/cd/"/>
    
  </entry>
  
  <entry>
    <title>[JENKINS] 젠킨스 설치 및 설정 for centos</title>
    <link href="https://skarlsla.github.io/2019/04/29/%EC%A0%A0%ED%82%A8%EC%8A%A4-%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95/"/>
    <id>https://skarlsla.github.io/2019/04/29/젠킨스-설치-및-설정/</id>
    <published>2019-04-29T08:21:03.000Z</published>
    <updated>2019-07-15T08:59:49.881Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="1-자바설치"><a href="#1-자바설치" class="headerlink" title="1. 자바설치"></a>1. 자바설치</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum list java*jdk-devel</span><br><span class="line">yum install java-1.8.0-openjdk-devel.x86_64</span><br><span class="line">java -version</span><br><span class="line"><span class="built_in">which</span> javac</span><br><span class="line">readlink -f /usr/bin/javac</span><br><span class="line"></span><br><span class="line">/etc/profile 맨밑줄 추가</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.201.b09-2.el7_6.x86_64/bin/javac</span><br></pre></td></tr></table></figure><hr><h3 id="2-젠킨스-설치"><a href="#2-젠킨스-설치" class="headerlink" title="2. 젠킨스 설치"></a>2. 젠킨스 설치</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo</span><br><span class="line">rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key</span><br><span class="line">yum install jenkins</span><br><span class="line"></span><br><span class="line">vi /etc/sysconfig/jenkins 포트변경 9090</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;1-자바설치&quot;&gt;&lt;a href=&quot;#1-자바설치&quot; class=&quot;headerlink&quot; title=&quot;1. 자바설치&quot;&gt;&lt;/a&gt;1. 자바설치&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
      <category term="DevOps" scheme="https://skarlsla.github.io/categories/DevOps/"/>
    
    
      <category term="jenkins" scheme="https://skarlsla.github.io/tags/jenkins/"/>
    
      <category term="ci" scheme="https://skarlsla.github.io/tags/ci/"/>
    
  </entry>
  
  <entry>
    <title>[RABBITMQ] reply-to 옵션에 대한 분석</title>
    <link href="https://skarlsla.github.io/2019/04/29/reply-to-%EC%98%B5%EC%85%98%EC%97%90-%EB%8C%80%ED%95%9C-%EB%B6%84%EC%84%9D/"/>
    <id>https://skarlsla.github.io/2019/04/29/reply-to-옵션에-대한-분석/</id>
    <published>2019-04-29T08:18:30.000Z</published>
    <updated>2019-07-15T09:04:01.965Z</updated>
    
    <content type="html"><![CDATA[<hr><h3 id="1-rabbitmq-amqp프로토콜-에서-지원하는-reply-to"><a href="#1-rabbitmq-amqp프로토콜-에서-지원하는-reply-to" class="headerlink" title="1. rabbitmq(amqp프로토콜) 에서 지원하는 reply-to"></a>1. rabbitmq(amqp프로토콜) 에서 지원하는 reply-to</h3><p><a href="http://www.rabbitmq.com/direct-reply-to.html" target="_blank" rel="noopener">http://www.rabbitmq.com/direct-reply-to.html</a></p><p>링크 발췌내용 중 사용법</p><p>Use<br>To use direct reply-to, an RPC client should:</p><p>Consume from the pseudo-queue amq.rabbitmq.reply-to in no-ack mode. There is no need to declare this “queue” first, although the client can do so if it wants.<br>Set the reply-to property in their request message to amq.rabbitmq.reply-to.<br>The RPC server will then see a reply-to property with a generated name. It should publish to the default exchange (“”) with the routing key set to this value (i.e. just as if it were sending to a reply queue as usual). The message will then be sent straight to the client consumer.</p><p>If the RPC server is going to perform some expensive computation it might wish to check if the client has gone away. To do this the server can declare the generated reply name first on a disposable channel in order to determine whether it still exists. Note that even if you declare the “queue” with passive=false there is no way to create it; the declare will just succeed (with 0 messages ready and 1 consumer) or fail.</p><p>결론적으로  클라이언트에서 consume(대기큐)를 할때  옵션으로 reply-to = amq.rabbitmq.reply-to 넣고  no-ack 모드로 실행한다.<br>그러면 따로 큐를 생성해 놓지 않더라도 amq.rabbitmq.reply-to 라는 큐가 생성되고  서버에서는 reply-to property를 통해  클라이언트에게 리턴한다. </p><p>서버에서 특이점은 publish 할때 따로 exchange name 을 적지 않고 routingkey 자리에 reply-to에서 온 값을 넣으면된다.<br>서버에서 reply-to 리턴하는 queue를 찍어보면 amq.rabbitmq.reply-to.g2dkAA1yYWJiaXRAdHdlYjAyAAAvugAAAAMB.N2mDRUJksXuxZHf1leTCKg==<br>이런식으로 뒤에 임의의 값이 붙어서 나온다.  여러 서버를 띄어도 저 값은 변하지 않았다.  rabbitmq 서버에서 관리하는 것으로 보인다.     </p><hr><h3 id="2-reply-to를-사용하지-않으면"><a href="#2-reply-to를-사용하지-않으면" class="headerlink" title="2.  reply-to를 사용하지 않으면"></a>2.  reply-to를 사용하지 않으면</h3><p>reply-to 옵션을 쓰지않고 지정된 큐로 작업이 가능하다.<br>ack모드를 사용할수있어 데이터 유지하는 옵션을 사용할수있다.<br>하지만 옵션을 사용시 rabbitmq에서 제공하는 큐생성 및 사용시 추가적인 작업이 필요해 보인다.  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h3 id=&quot;1-rabbitmq-amqp프로토콜-에서-지원하는-reply-to&quot;&gt;&lt;a href=&quot;#1-rabbitmq-amqp프로토콜-에서-지원하는-reply-to&quot; class=&quot;headerlink&quot; title=&quot;1. rabbitmq(amq
      
    
    </summary>
    
      <category term="RabbitMq" scheme="https://skarlsla.github.io/categories/RabbitMq/"/>
    
    
      <category term="reply-to" scheme="https://skarlsla.github.io/tags/reply-to/"/>
    
  </entry>
  
</feed>
